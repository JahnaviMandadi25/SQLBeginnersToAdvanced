-- RIGHT JOIN
USE SQLForDA;  -- Switch to the 'SQLForDA' database.

-- 1. Retrieve all orders with their customer names, including orders placed by unknown customers.
SELECT orders.order_id, orders.order_date, orders.amount,  
       customers.first_name, customers.last_name  -- Selects order details along with customer names.
FROM customers  
RIGHT JOIN orders ON customers.customer_id = orders.customer_id;  -- Uses RIGHT JOIN to include all orders, even those without known customers.

-- 2. Find the total revenue generated by each customer, including orders from unknown customers.
SELECT customers.customer_id, customers.first_name, customers.last_name,  
       SUM(orders.amount) AS TotalRevenue  -- Calculates total revenue per customer.
FROM customers  
RIGHT JOIN orders ON customers.customer_id = orders.customer_id  
GROUP BY customers.customer_id, customers.first_name, customers.last_name;  -- Groups by customer to ensure correct revenue calculation.

-- 3. Get all orders and customer emails, showing NULL for customers not in the customers table.
SELECT customers.first_name, customers.email, orders.order_id  -- Selects customer email with order details.
FROM customers  
RIGHT JOIN orders ON customers.customer_id = orders.customer_id;  -- Ensures all orders are included even if the customer is missing.

-- 4. Find orders made **before** 2025-01-03, and include orders with missing customer details.
SELECT customers.first_name, orders.order_id, orders.order_date  -- Selects customer and order details.
FROM customers  
RIGHT JOIN orders ON customers.customer_id = orders.customer_id  
WHERE orders.order_date < '2025-01-03';  -- **Fixed Issue: Changed `>` to `<` to correctly filter orders before the given date.**